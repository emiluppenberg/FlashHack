@model FlashHack.ViewModels.PostsIndexViewModel

@{
    ViewData["Title"] = "Posts by Head Category";
    var headCategoryName = ViewData["HeadCategoryName"] as string ?? "Posts by Head Category";
    var currentSortOrder = ViewData["CurrentSortOrder"] as string ?? "newest";
}

<div class="text-center welcome-section">
    <h1 class="display-4">@headCategoryName</h1>
</div>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Post List</h2>
        <a asp-controller="Posts" asp-action="Create" class="btn btn-primary">Create Post</a>
    </div>
    <ul class="nav nav-tabs mb-3">
        <li class="nav-item">
            <a class="nav-link @(currentSortOrder == "newest" ? "active" : "")" asp-controller="Posts" asp-action="IndexByHeadCategory" asp-route-headCategoryId="@ViewData["HeadCategoryId"]" asp-route-sortOrder="newest">Newest to Oldest</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(currentSortOrder == "oldest" ? "active" : "")" asp-controller="Posts" asp-action="IndexByHeadCategory" asp-route-headCategoryId="@ViewData["HeadCategoryId"]" asp-route-sortOrder="oldest">Oldest to Newest</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(currentSortOrder == "mostLiked" ? "active" : "")" asp-controller="Posts" asp-action="IndexByHeadCategory" asp-route-headCategoryId="@ViewData["HeadCategoryId"]" asp-route-sortOrder="mostLiked">Most Liked</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(currentSortOrder == "leastLiked" ? "active" : "")" asp-controller="Posts" asp-action="IndexByHeadCategory" asp-route-headCategoryId="@ViewData["HeadCategoryId"]" asp-route-sortOrder="leastLiked">Least Liked</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(currentSortOrder == "mostCommented" ? "active" : "")" asp-controller="Posts" asp-action="IndexByHeadCategory" asp-route-headCategoryId="@ViewData["HeadCategoryId"]" asp-route-sortOrder="mostCommented">Most Commented</a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(currentSortOrder == "leastCommented" ? "active" : "")" asp-controller="Posts" asp-action="IndexByHeadCategory" asp-route-headCategoryId="@ViewData["HeadCategoryId"]" asp-route-sortOrder="leastCommented">Least Commented</a>
        </li>
    </ul>
    @foreach (var post in Model.Posts)
    {
        <div class="card mb-3 post-item">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3>@post.Title<p class="text-muted">by @post.User.FirstName</p></h3>
                @if (Model.Favorites != null)
                {
                    @if (!Model.Favorites.Contains(post))
                    {
                        <i class="fa-regular fa-star star-icon" onclick="toggleFavorite(this, @post.Id)"></i>
                    }
                    @if (Model.Favorites.Contains(post))
                    {
                        <i class="fa-solid fa-star star-icon" onclick="toggleFavorite(this, @post.Id)"></i>
                    }
                }
            </div>
            <div class="card-body">
                <p>@post.Content.Substring(0, Math.Min(post.Content.Length, 100))...</p>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fa-solid fa-thumbs-up"></i> @post.UpVotes
                        <i class="fa-solid fa-thumbs-down ms-3"></i> @post.DownVotes
                        <i class="fa-solid fa-comments ms-3"></i> @post.Comments.Count
                    </div>
                    <div>
                        <a asp-action="Details" asp-route-id="@post.Id" class="btn btn-primary">Read More</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script>
    async function toggleFavorite(element, postId) {
        let response;

        if (element.classList.contains('fa-regular')) {
            response = await fetch(`/Posts/AddToFavorites/${postId}`,
                {
                    method: "POST"
                });
        }
        if (element.classList.contains('fa-solid')) {
            response = await fetch(`/Posts/RemoveFromFavorites/${postId}`,
                {
                    method: "POST"
                });
        }

        const data = await response.json();

        document.getElementById("result-" + postId).textContent = data.result;

        element.classList.toggle('fa-solid');
        element.classList.toggle('fa-regular');
    }
</script>
