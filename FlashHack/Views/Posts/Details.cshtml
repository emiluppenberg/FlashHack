@model FlashHack.ViewModels.PostDetailsViewModel

@{
    ViewData["Title"] = "Details";
    @inject IHttpContextAccessor HttpContextAccessor
    var userId = HttpContextAccessor.HttpContext.Session.GetInt32("UserId");
    var postId = Model.Post.Id;
}

<div class="container mt-4">
    <div class="card mb-3 post-item">
        <p id="result-@Model.Post.Id"></p>
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3>@Model.Post.Title</h3>
            @if (Model.Favorites != null)
            {
                if (!Model.Favorites.Contains(Model.Post))
                {
                    <i class="fa-regular fa-star star-icon" onclick="toggleFavorite(this, @Model.Post.Id)"></i>
                }
                if (Model.Favorites.Contains(Model.Post))
                {
                    <i class="fa-solid fa-star star-icon" onclick="toggleFavorite(this, @Model.Post.Id)"></i>
                }
            }
        </div>
        <div class="card-body">
            <p>@Model.Post.Content</p>
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <i class="fa-solid fa-thumbs-up thumbs-icon" onclick="vote(@Model.Post.Id, 'true')"></i><span id="upvotes-@Model.Post.Id">@Model.Post.UpVotes</span>
                    <i class="fa-solid fa-thumbs-down thumbs-icon ms-3" onclick="vote(@Model.Post.Id, 'false')"></i><span id="downvotes-@Model.Post.Id">@Model.Post.DownVotes</span>
                    <i class="fa-solid fa-comments ms-3"></i> @Model.Post.Comments.Count
                </div>
                <div>
                    <span class="text-muted">by <a asp-controller="Users" asp-action="Profile" asp-route-id="@Model.Post.User.Id" class="user-link no-underline">@Model.Post.User.FirstName @Model.Post.User.LastName</a></span>
                </div>
            </div>
            <div>
                <p>
                    <a asp-action="Create" asp-controller="Comments" asp-route-userId="@userId" asp-route-postId="@postId" asp-route-returnUrl="@Context.Request.Path" class="answer-button">Answer</a>
                </p>
            </div>
            <div class="comments-section mt-3">
                <h5>Comments:</h5>
                <ul class="list-group">
                    @foreach (var comment in Model.Post.Comments)
                    {
                        <li class="list-group-item comment-item">
                            <div class="comment-container">
                                <div class="comment-user-info">
                                    <img src="@comment.User.ProfilePicURL" class="profile-pic" alt="Profile Picture" />
                                    @if (comment.User.IsPremium)
                                    {
                                        <div class="premium-badge">Premium</div>
                                    }
                                    <div class="user-name">
                                        <a asp-controller="Users" asp-action="Profile" asp-route-id="@comment.User.Id" class="user-link">
                                            by @comment.User.FirstName @comment.User.LastName
                                        </a>
                                    </div>
                                </div>
                                <div class="comment-content">
                                    @comment.Content
                                    @if (comment.UseSignature)
                                    {
                                        <br />
                                        @comment.User.Signature
                                    }
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="mt-3">
        <a asp-action="Edit" asp-route-id="@Model?.Post.Id" class="btn btn-primary">Edit</a>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

<script>
    async function toggleFavorite(element, postId) {
            let response;

            if (element.classList.contains('fa-regular')) {
                response = await fetch(`/Posts/AddToFavorites/${postId}`,
                    {
                        method: "POST"
                    });
            }
            if (element.classList.contains('fa-solid')) {
                response = await fetch(`/Posts/RemoveFromFavorites/${postId}`,
                    {
                        method: "POST"
                    });
            }

            const data = await response.json();

            document.getElementById("result-" + postId).textContent = data.result;

            element.classList.toggle('fa-solid');
            element.classList.toggle('fa-regular');
        }

    async function vote(postId, isUpDown){
        // const thumbsUp = document.querySelector('.fa-thumbs-up');
        // const thumbsDown = document.querySelector('.fa-thumbs-down');
        // thumbsUp.classList.toggle('selected');
        // thumbsDown.classList.toggle('selected');

        const response = await fetch(`/Posts/Vote/${postId}/${isUpDown}`,
        {
            method: "POST"
        });

        const data = await response.json();

        document.getElementById("result-" + postId).textContent = data.result;

        countVotes(postId);
    }

    async function countVotes(postId){
        response = await fetch(`/Posts/CountVotes/${postId}`,
        {
            method: "GET"
        });

        data = await response.json();

        document.getElementById("upvotes-" + postId).textContent = data.upVotes;

        document.getElementById("downvotes-" + postId).textContent = data.downVotes;
    }
</script>
