@model FlashHack.Models.Post

@{
    ViewData["Title"] = "Details";
    @inject IHttpContextAccessor HttpContextAccessor
    var userId = HttpContextAccessor.HttpContext.Session.GetInt32("UserId");
    var postId = Model.Id;
}

<div class="container mt-4">
    <div class="card mb-3 post-item">
        <p id="result-@Model.Id"></p>
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3>@Model.Title</h3>
            <i class="fa-regular fa-star star-icon" onclick="toggleFavorite(this, @Model.Id)"></i>
        </div>
        <div class="card-body">
            <p>@Model.Content</p>
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <i class="fa-solid fa-thumbs-up thumbs-icon" onclick="upVote(@Model.Id)"></i><span id="upvotes-@Model.Id">@Model.UpVotes</span>
                    <i class="fa-solid fa-thumbs-down thumbs-icon ms-3" onclick="downVote(@Model.Id)"></i><span id="downvotes-@Model.Id">@Model.DownVotes</span>
                    <i class="fa-solid fa-comments ms-3"></i> @Model.Comments.Count
                </div>
                <div>
                    <span class="text-muted">by <a asp-controller="Users" asp-action="Profile" asp-route-id="@Model.User.Id">@Model.User.FirstName @Model.User.LastName</a></span>
                </div>
            </div>
            <div>
                <p>
                    <a asp-action="Create" asp-controller="Comments" asp-route-userId="@userId" asp-route-postId="@postId"> Answer</a>
                </p>
            </div>
            <div class="mt-3">
                <h5>Comments:</h5>
                <ul class="list-group">
                    @foreach (var comment in Model.Comments)
                    {
                        <li class="list-group-item">
                            <strong>@comment.User.FirstName @comment.User.LastName:</strong> @comment.Content
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="mt-3">
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Edit</a>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>

<script>
    async function toggleFavorite(element, postId) {
            let response;

            if (element.classList.contains('fa-regular')) {
                response = await fetch(`/Posts/AddToFavorites/${postId}`,
                    {
                        method: "POST"
                    });
            }
            if (element.classList.contains('fa-solid')) {
                response = await fetch(`/Posts/RemoveFromFavorites/${postId}`,
                    {
                        method: "POST"
                    });
            }

            const data = await response.json();

            document.getElementById("result-" + postId).textContent = data.result;

            element.classList.toggle('fa-solid');
            element.classList.toggle('fa-regular');
        }

    async function upVote(postId){
        // const thumbsUp = document.querySelector('.fa-thumbs-up');
        // const thumbsDown = document.querySelector('.fa-thumbs-down');
        // thumbsUp.classList.toggle('selected');
        // thumbsDown.classList.toggle('selected');

        const response = await fetch(`/Posts/UpVote/${postId}`,
        {
            method: "POST"
        });

        const data = await response.json();

        document.getElementById("result-" + postId).textContent = data.result;

        countVotes(postId);
    }

    async function downVote(postId){
        // const thumbsUp = document.querySelector('.fa-thumbs-up');
        // const thumbsDown = document.querySelector('.fa-thumbs-down');
        // thumbsUp.classList.toggle('selected');
        // thumbsDown.classList.toggle('selected');

        const response = await fetch(`/Posts/DownVote/${postId}`,
        {
            method: "POST"
        });

        const data = await response.json();

        document.getElementById("result-" + postId).textContent = data.result;

        countVotes(postId);
    }

    async function countVotes(postId){
        response = await fetch(`/Posts/CountUpVotes/${postId}`,
        {
            method: "GET"
        })

        data = await response.json();

        document.getElementById("upvotes-" + postId).textContent = data.value;

        response = await fetch(`/Posts/CountDownVotes/${postId}`,
        {
            method: "GET"
        })

        data = await response.json();

        document.getElementById("downvotes-" + postId).textContent = data.value;
    }
</script>

